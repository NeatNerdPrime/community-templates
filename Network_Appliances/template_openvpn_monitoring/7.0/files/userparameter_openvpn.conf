# OpenVPN monitoring UserParameters for Zabbix Agent 2
# Version: 1.0.0
# Compatible with: Zabbix 7.0+
#
# Installation:
# 1. Copy this file to /etc/zabbix/zabbix_agent2.d/
# 2. Restart zabbix-agent2 service
# 3. Test with: zabbix_agent2 -t openvpn.version
#
# Requirements:
# - OpenVPN installed and running
# - Status files in /var/log/openvpn/
# - Zabbix user has read permissions on log files

# Discovery of connected OpenVPN users
# Returns JSON formatted list of users for LLD
UserParameter=openvpn.discovery,/opt/zabbix/openvpn-discovery.sh

# Count total number of connected users
# Searches all status files and counts CLIENT_LIST entries
UserParameter=openvpn.user.number.new,find /var/log/openvpn -name "status*.log" -exec grep -c "^CLIENT_LIST" {} \; 2>/dev/null | awk '{sum += $1} END {print sum+0}'

# Check if specific user is connected
# Parameter: Username
# Returns: 1 if connected, 0 if not
UserParameter=openvpn.user.status.new[*],if grep -q "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null; then echo 1; else echo 0; fi

# Get bytes received for specific user
# Parameter: Username
# Returns: Bytes received (from status file column 6)
UserParameter=openvpn.user.received.new[*],grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f6

# Get bytes sent for specific user
# Parameter: Username
# Returns: Bytes sent (from status file column 7)
UserParameter=openvpn.user.sent.new[*],grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f7

# Get connection duration for specific user (in seconds)
# Parameter: Username
# Returns: Connection duration in seconds since connected_since_time
UserParameter=openvpn.user.duration.new[*],TIMESTAMP=$(grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f9); if [ -n "$TIMESTAMP" ]; then echo $(($(date +%s) - $TIMESTAMP)); else echo 0; fi

# Get connection timestamp for specific user
# Parameter: Username
# Returns: Unix timestamp when user connected
UserParameter=openvpn.user.connected_since.new[*],grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f9

# Get real IP address for specific user
# Parameter: Username
# Returns: Real IP address (from status file column 3)
UserParameter=openvpn.user.real_address.new[*],grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f3 | cut -d: -f1

# Get virtual IP address for specific user
# Parameter: Username
# Returns: Virtual IP address (from status file column 4)
UserParameter=openvpn.user.virtual_address.new[*],grep "^CLIENT_LIST.*$1" /var/log/openvpn/status*.log 2>/dev/null | head -1 | cut -d, -f4

# Count authentication failures in logs (last 24 hours)
# Returns: Number of AUTH_FAILED entries in last 24 hours
UserParameter=openvpn.auth_failures,find /var/log/openvpn -name "*.log" -newermt "24 hours ago" -exec grep -c "AUTH_FAILED\|TLS Error\|Connection reset\|Authenticate/Decrypt packet error" {} \; 2>/dev/null | awk '{sum += $1} END {print sum+0}'

# Count total reconnections (last 24 hours)
# Returns: Number of reconnection events
UserParameter=openvpn.reconnections,find /var/log/openvpn -name "*.log" -newermt "24 hours ago" -exec grep -c "SIGTERM\[soft,ping-restart\]\|Connection reset\|Restart" {} \; 2>/dev/null | awk '{sum += $1} END {print sum+0}'

# Get OpenVPN version
# Returns: Version string (e.g., "2.5.9")
UserParameter=openvpn.version,openvpn --version 2>&1 | head -1 | awk '{print $2}' | cut -d"_" -f1